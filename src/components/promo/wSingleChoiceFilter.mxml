<?xml version="1.0" encoding="utf-8"?>
<s:Group xmlns:fx="http://ns.adobe.com/mxml/2009" 
		 xmlns:s="library://ns.adobe.com/flex/spark" 
		 width="100%" height="100%"
		 preinitialize="group1_preinitializeHandler(event)" 
		 xmlns:Promo="components.promo.*">
	<fx:Script>
		<![CDATA[
			import mx.collections.ArrayCollection;
			import mx.events.FlexEvent;
			
			import spark.events.IndexChangeEvent;
			import spark.events.TextOperationEvent;
			
			import classes.Globals;
			
			import events.NavBarEvent;
			import events.PromoSurveyEvent;
			
			public var VIS_NUMBER:String = "";
			public var imgName:String = "";
			[Bindable] public var arrQuestions:ArrayCollection = new ArrayCollection();
			private var lstVScrollPos:Number = 0;
			
			protected var QUE_CODE:String = "";
			
			protected function group1_preinitializeHandler(event:FlexEvent):void
			{
				QUE_CODE = arrQuestions.getItemAt(0).SUD_QUE_CODE;
				
				img.source = File.documentsDirectory.resolvePath(Globals.MEDIA_FILES_FOLDER_PATH + "/" + imgName).url;
				
				this.addEventListener(NavBarEvent.BACK_EVENT,backHandler,false,0,true);
				this.addEventListener(NavBarEvent.NEXT_EVENT,nextHandler,false,0,true);

				findSelectedAnswer();
			}
			
			protected function filterByQuestion(item:Object):Boolean
			{
				var result:Boolean = false;
				
				if (item.SUD_QUE_CODE == QUE_CODE)
				{
					result = true;
				}	
				
				return result;
			}	
			
			protected function backHandler(event:NavBarEvent):void
			{
	     		clearArray();
				dispatchEvent(new PromoSurveyEvent(PromoSurveyEvent.BACK_EVENT,true,false));
			}
			
			protected function nextHandler(event:NavBarEvent):void
			{
				if (lstQuestions.selectedIndex > -1)
				{
					dispatchEvent(new PromoSurveyEvent(PromoSurveyEvent.NEXT_EVENT,true,false));
				}
				else
				{
					Globals.showOkDialog("", "Необходимо выбрать ответ");
				}
			}
			
			protected function lstQuestions_clickHandler(event:MouseEvent):void
			{
				var selIdx:int = lstQuestions.selectedIndex;					
				var vPos:Number = lstQuestions.layout.verticalScrollPosition;
				
				clearArray();
				
				if (selIdx > -1)
				{
					arrQuestions.getItemAt(selIdx).SELECTED = "1";
					arrQuestions.getItemAt(selIdx).SRS_ANS_VALUE = "1";
					
					arrQuestions.refresh();
					lstQuestions.selectedIndex = selIdx;
					lstQuestions.layout.verticalScrollPosition = vPos;

					lstQuestions.ensureIndexIsVisible(selIdx);
				}				
			}
			
			private function clearArray():void
			{
				arrQuestions.filterFunction = filterByQuestion;
				arrQuestions.refresh();
				
				for (var i:int=0; i < arrQuestions.length; i++)
				{
					arrQuestions.getItemAt(i).SELECTED = "0";
					arrQuestions.getItemAt(i).SRS_ANS_VALUE = "null";
				}
				
				arrQuestions.filterFunction = filterItems;
				arrQuestions.refresh();
			}
			
			private function findSelectedAnswer():void
			{
				for (var i:int=0; i < arrQuestions.length; i++)
				{
					if (arrQuestions.getItemAt(i).SRS_ANS_VALUE == "1")
					{
						lstQuestions.selectedIndex = i;
						lstQuestions.ensureIndexIsVisible(i);
					}
				}
			}
			
			protected function lstQuestions_changingHandler(event:IndexChangeEvent):void
			{
				lstVScrollPos = lstQuestions.layout.verticalScrollPosition;
			}
			
			protected function lstQuestions_valueCommitHandler(event:FlexEvent):void
			{
				lstQuestions.layout.verticalScrollPosition = lstVScrollPos;
			}
			
			protected function btnClearFilter_clickHandler(event:MouseEvent):void
			{
				txtFilter.text = "";
				
				arrQuestions.filterFunction = filterByQuestion;
				arrQuestions.refresh();
			}
			
			protected function txtFilter_changeHandler(event:TextOperationEvent):void
			{
				arrQuestions.filterFunction = filterItems;
				arrQuestions.refresh();
			}
			
			private function filterItems(item:Object):Boolean 
			{
				var result:Boolean = false;				
				var itemName:String = "";				
				var searchString:String = txtFilter.text.toLowerCase();
				
				try {	itemName	= 	(item.ANS_TEXT as String).toLowerCase();		} catch (err1:Error) {		}

				if ((itemName.indexOf(searchString) > -1) && (item.SUD_QUE_CODE == QUE_CODE))
				{
					result = true;
				}
				
				return result;
			}
			
		]]>
	</fx:Script>
	<s:BitmapImage id="img" scaleMode="stretch" smooth="true" smoothingQuality="high" width="100%" height="100%" />
	<s:VGroup width="100%" height="90%" gap="0" verticalAlign="top">
		<Promo:NavBar id="navBar" headerObject="{arrQuestions.getItemAt(0) as Object}" />		
		<s:HGroup width="100%" height="100%" verticalAlign="middle" horizontalAlign="center" paddingTop="10" paddingBottom="10">				
			<s:VGroup id="panQuestions" width="60%" height="100%" verticalAlign="middle" horizontalAlign="center">
				<s:Group width="100%" height="100%">
					<s:Rect width="100%" height="100%" alpha="0.75" radiusX="5" radiusY="5">
						<s:fill>
							<s:SolidColor color="0xFFFFFF"/>
						</s:fill>
					</s:Rect>
					
					<s:VGroup width="100%" height="100%" verticalAlign="top" horizontalAlign="center">						
						<s:HGroup width="100%" height="80" verticalAlign="middle" horizontalAlign="center" paddingLeft="5" paddingRight="5">
							<s:TextInput id="txtFilter" height="70" width="70%" autoCapitalize="all"
										 prompt="Фильтр..."	
										 change="txtFilter_changeHandler(event)"
										 returnKeyLabel="done"/>
							<s:Button id="btnClearFilter" label="Очистить"  
									  height="70" width="30%" 
									  click="btnClearFilter_clickHandler(event)"								  
									  fontWeight="bold" 
									  color="{Globals.BUTTON_COLOR}" chromeColor="{Globals.BUTTON_CHROME_COLOR}" />	
						</s:HGroup>
						<s:List id="lstQuestions" labelField="{Globals.ANS_TEXT_LANG}"
								itemRenderer="renderers.QuestionRenderer"
								changing="lstQuestions_changingHandler(event)"
								valueCommit="lstQuestions_valueCommitHandler(event)"
								click="lstQuestions_clickHandler(event)"
								width="100%" height="85%"
								dataProvider="{arrQuestions}"
								contentBackgroundAlpha="0.5"
								alpha="0.5" />
					</s:VGroup>
				</s:Group>					
			</s:VGroup>
		</s:HGroup>
	</s:VGroup>	
</s:Group>
