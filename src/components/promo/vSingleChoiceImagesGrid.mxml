<?xml version="1.0" encoding="utf-8"?>
<s:Group xmlns:fx="http://ns.adobe.com/mxml/2009" 
		 xmlns:s="library://ns.adobe.com/flex/spark" 
		 width="100%" height="100%"
		 preinitialize="group1_preinitializeHandler(event)"
		 xmlns:Promo="components.promo.*">
	<fx:Script>
		<![CDATA[
			import com.distriqt.extension.dialog.Dialog;
			
			import mx.collections.ArrayCollection;
			import mx.events.FlexEvent;
			
			import spark.components.HGroup;
			import spark.components.VGroup;
			import spark.layouts.VerticalLayout;
			
			import classes.Globals;
			
			import events.ImageCheckedEvent;
			import events.NavBarEvent;
			import events.PromoSurveyEvent;
			
			public var VIS_NUMBER:String = "";
			public var imgName:String = "";
			[Bindable] public var arrQuestions:ArrayCollection = new ArrayCollection();
			[Bindable] public var showTextOverImage:Boolean = true;
			
			private var vgWidth:Number = 0;
			private var vgHeight:Number = 0;
			private var minSquareHeight:Number = 0;
			
			protected function group1_preinitializeHandler(event:FlexEvent):void
			{
				img.source = File.documentsDirectory.resolvePath(Globals.MEDIA_FILES_FOLDER_PATH + "/" + imgName).url;
				this.addEventListener(NavBarEvent.BACK_EVENT,backHandler,false,0,true);
				this.addEventListener(NavBarEvent.NEXT_EVENT,nextHandler,false,0,true);
				panImage.addEventListener(ImageCheckedEvent.CHECK_EVENT,imageCheckedHandler,false,0,true);
			}
			
			private function imageCheckedHandler(e:ImageCheckedEvent):void
			{
				Dialog.service.toast("Выбрано: " + e.text);
				var checkedIdx:int = e.data;
				var hgSelectedIndex:int = 0;
				
				clearArray();
				
				arrQuestions.getItemAt(checkedIdx).SELECTED = "1";
				arrQuestions.getItemAt(checkedIdx).SRS_ANS_VALUE = "1";
				
				// mark image
				for (var i:int=0; i<panImage.numElements; i++)
				{
					var numItems:Number = (panImage.getElementAt(i) as HGroup).numElements;
					for (var j:int=0; j<numItems; j++)
					{
						var imageHolder:imageWithLabel = ((panImage.getElementAt(i) as HGroup).getElementAt(j) as VGroup).getElementAt(0) as imageWithLabel
						if (checkedIdx.toString() == imageHolder.imageId)
						{
							imageHolder.checked = true;
							hgSelectedIndex = i;
						}
						else
						{
							imageHolder.checked = false;
						}						
					}
				}	
				
				// scroll to selected item
				var lay:VerticalLayout = panImage.layout as VerticalLayout;
				if (lay.fractionOfElementInView(hgSelectedIndex) < 1) {
					lay.verticalScrollPosition += lay.getScrollPositionDeltaToElement(hgSelectedIndex).y;
				}
			}
			
			private function clearArray():void
			{
				for (var i:int=0; i < arrQuestions.length; i++)
				{
					arrQuestions.getItemAt(i).SELECTED = "0";
					arrQuestions.getItemAt(i).SRS_ANS_VALUE = "null";
				}
			}	
			
			
			protected function backHandler(event:NavBarEvent):void
			{
				clearArray();
				dispatchEvent(new PromoSurveyEvent(PromoSurveyEvent.BACK_EVENT,true,false));
			}
			
			protected function nextHandler(event:NavBarEvent):void
			{
				var allowNext:Boolean = false;
				
				for (var i:int=0; i < arrQuestions.length; i++)
				{
					if (arrQuestions.getItemAt(i).SELECTED == "1")
					{
						allowNext = true;
					}
				}
					
				if (allowNext)
				{
					dispatchEvent(new PromoSurveyEvent(PromoSurveyEvent.NEXT_EVENT,true,false));
				}
				else
				{
					Globals.showOkDialog("", "Необходимо выбрать ответ");
				}
			}
			
			protected function vgroup1_creationCompleteHandler(event:FlexEvent):void
			{
				minSquareHeight = Math.ceil(vgMain.height*0.15);
				vgWidth = Math.ceil(vgMain.width*0.9);
				vgHeight = Math.ceil(vgMain.height*0.9);
				
				var numItems:Number = arrQuestions.length;
				var totalSquare:Number = vgWidth * vgHeight;
				var padSquare:Number = Math.ceil(totalSquare/arrQuestions.length);
				var padMaxWidth:Number = Math.ceil(Math.sqrt(padSquare));				
				
				var arr:Array = new Array();
				
				for (var i:int=0; i<numItems; i++)
				{
					var a:Number = Math.ceil(vgWidth / (i+1));
					var b:Number = Math.ceil(vgHeight / (i+1));
					if (a < padMaxWidth) {arr.push({value: a})}
					if (b < padMaxWidth) {arr.push({value: b})}
				}
				
				arr.sortOn("value", Array.DESCENDING | Array.NUMERIC);
				
				var finalQuadWidth:Number = 1;
				for (var j:int=0; j<arr.length; j++)
				{
					var quadWidth:Number = Number(arr[j].value);
					var numQuads:Number = Math.ceil(vgHeight/quadWidth)*Math.ceil(vgWidth/quadWidth)
					if (numQuads > numItems)
					{
						finalQuadWidth = quadWidth;
						break;
					}
				}
				
				if (finalQuadWidth < minSquareHeight) { finalQuadWidth = minSquareHeight}

				var col:int = 0;				
				while (col < arrQuestions.length)
				{
					var hgrRow:HGroup = new HGroup();	
					for(var k:int = 0;k<Math.ceil(vgWidth/finalQuadWidth);k++)
					{
						if (col < arrQuestions.length)
						{
							var vgImage:VGroup = new VGroup();
							vgImage.width = finalQuadWidth;
							vgImage.height = finalQuadWidth;
							vgImage.verticalAlign = "middle";
							vgImage.horizontalAlign = "center";
							hgrRow.addElement(vgImage);
							loadImage(arrQuestions.getItemAt(col).ANS_PHOTO,vgImage,Math.ceil(finalQuadWidth*0.95),col.toString(),arrQuestions.getItemAt(col)[Globals.ANS_TEXT_LANG]);
						}
						col++;
					}
					panImage.addElement(hgrRow);				
				}		
			}

			private function loadImage(imageName:String, vg:VGroup, imgHeight:Number, imgId:String, labelText:String):void
			{
				var loader:Loader = new Loader();
				var fl:File = File.documentsDirectory.resolvePath(Globals.MEDIA_FILES_FOLDER_PATH +  "/" + imageName);
				var bytes:ByteArray = new ByteArray();
				var filestream:FileStream = new FileStream();			
				var bitmap:Bitmap;
				
				var imgAnswer:imageWithLabel = new imageWithLabel();
				imgAnswer.showTextOverImages = showTextOverImage;
				imgAnswer.imageHeight = imgHeight;
				imgAnswer.imageId = imgId;
				imgAnswer.imageText = labelText;
				imgAnswer.checked = (arrQuestions.getItemAt(Number(imgId)).SELECTED == "1") ? true : false;
				
				if (fl.exists)
				{
					try
					{
						filestream.open(fl, FileMode.READ);
						filestream.readBytes(bytes, 0, filestream.bytesAvailable);
						filestream.close();
						loader = new Loader();
						loader.contentLoaderInfo.addEventListener(Event.COMPLETE, showPic);
						loader.contentLoaderInfo.addEventListener(IOErrorEvent.IO_ERROR, onError);
						loader.loadBytes(bytes);
					}
					catch (e:Error)
					{
						Dialog.service.toast(e.getStackTrace());
					}
					
					function showPic(event:Event):void
					{
						loader.contentLoaderInfo.removeEventListener(Event.COMPLETE, showPic);
						var bitmapData:BitmapData = new BitmapData(loader.content.width,loader.content.height, true, 0x000000);
						bitmapData.draw(loader.content, new Matrix(),null,null,null,true);		
						imgAnswer.img.source = new Bitmap(bitmapData);
						vg.addElement(imgAnswer);
					}
					
					function onError(err:IOErrorEvent):void
					{
						Dialog.service.toast("Нет фото");
					}
				}
				else
				{
					imgAnswer.showTextOverImages = true;
					imgAnswer.img.source = "assets/images/no_image.png";
					vg.addElement(imgAnswer);
				}				
			}
			
			
	
		]]>
	</fx:Script>
	<fx:Declarations>

	</fx:Declarations>
	<s:BitmapImage id="img" scaleMode="stretch" smooth="true" smoothingQuality="high" width="100%" height="100%" />
	<s:VGroup id="vgMain" width="100%" height="90%" gap="0" creationComplete="vgroup1_creationCompleteHandler(event)">
		<Promo:NavBar id="navBar" headerObject="{arrQuestions.getItemAt(0) as Object}" />	
		<s:HGroup width="100%" height="100%">
			<s:Scroller id="imgScroller" width="100%" height="100%" verticalScrollPolicy="on" horizontalScrollPolicy="auto">
				<s:VGroup id="panImage" width="100%" height="100%" verticalAlign="middle" horizontalAlign="center">							
				</s:VGroup>
			</s:Scroller>
		</s:HGroup>
	</s:VGroup>	
</s:Group>
