<?xml version="1.0" encoding="utf-8"?>
<s:VGroup xmlns:fx="http://ns.adobe.com/mxml/2009" 
		  xmlns:s="library://ns.adobe.com/flex/spark" 
		  width="100%" 
		  height="100%"
		  gap="0"
		  preinitialize="vgroup1_preinitializeHandler(event)"
		  creationComplete="vgroup1_creationCompleteHandler(event)" 
		  xmlns:system="components.system.*" xmlns:renderers="renderers.*" xmlns:components="flatspark.components.*">
	<fx:Script>
		<![CDATA[
			import com.distriqt.extension.dialog.Dialog;
			import com.distriqt.extension.dialog.DialogView;
			import com.distriqt.extension.dialog.builders.AlertBuilder;
			import com.distriqt.extension.dialog.events.DialogViewEvent;
			import com.distriqt.extension.dialog.objects.DialogAction;
			
			import mx.collections.ArrayCollection;
			import mx.events.FlexEvent;
			
			import spark.components.List;
			
			import classes.Globals;
			import classes.Model.BatchQuery;
			import classes.Model.Database;
			import classes.Utils.PartSync;
			
			import events.MainNavEvent;
			import events.PartSyncEvent;
			import events.Model.QueryEvent;
			import events.custom.CheckEvent;
			
			import flatspark.enums.BrandColorEnum;
			
			import renderers.SelectionRenderer;
			import renderers.ValueRenderer;

			[Bindable] private var arrQuestions:ArrayCollection = new ArrayCollection();			
			[Bindable] private var multipleSelection:Boolean = false;			
			[Bindable] private var questionCounter:int = 0;		
			[Bindable] private var lastQuestion:Boolean = false;
			
			private var selectedList:List = new List();
			private var itemsPercentWidth:Number = 100;
			private var questionBreadcrumb:Array;
			private var questionType:String = "";	
			private var counter:int = 0;
			private var finalAC:ArrayCollection = new ArrayCollection();
			
			protected function vgroup1_preinitializeHandler(event:FlexEvent):void
			{
				stage.setAspectRatio(StageAspectRatio.PORTRAIT);
			}			
			
			protected function vgroup1_creationCompleteHandler(event:FlexEvent):void
			{
				panSum.visible = false;
				panSum.includeInLayout = false;
				
				questionBreadcrumb = new Array();
				
				Database.removeEventListener(QueryEvent.DATA_LOADED, firstQuestionLoaded);
				Database.addEventListener(QueryEvent.DATA_LOADED, firstQuestionLoaded, false, 0, true);
				Database.init("SELECT * FROM VIEW_SURVEY_RESULTS WHERE SUD_SUR_CODE = " + Globals.SUR_CODE + " AND (SAL_CODE = " + Globals.SAL_CODE + ")");
			}
			private function firstQuestionLoaded(e:QueryEvent):void
			{		
				Database.removeEventListener(QueryEvent.DATA_LOADED, firstQuestionLoaded);
				
				if (e.data.length > 0)
				{
					arrQuestions = e.data;					
					questionLoaded(arrQuestions.getItemAt(0).SUD_QUE_CODE);
				}
				else
				{
					Globals.showOkDialog("Произошла ошибка", "Нет ответов для отображения");
				}
			}
			
			private function questionLoaded(QUE_CODE:String):void
			{
				arrQuestions.filterFunction = null;
				arrQuestions.refresh();
				
				arrQuestions.filterFunction = filterByQuestion;
				arrQuestions.refresh();
				
				function filterByQuestion(item:Object):Boolean
				{
					var result:Boolean = false;
					
					if (item.SUD_QUE_CODE == QUE_CODE)
					{
						result = true;
					}	
					
					return result;
				}				
				
				questionType = arrQuestions.getItemAt(0).QUE_QUT_CODE;
				lbQuestion.text = arrQuestions.getItemAt(0).QUE_TEXT;
				
				var factory:ClassFactory;
				
				// choose renderer
				if ((questionType == "2") || (questionType == "3")) {
					//factory = new ClassFactory(MultipleChoiceRenderer);
					factory = new ClassFactory(SelectionRenderer);
					//factory1.properties = {labelField:"ANS_TEXT"};
					lstAnswers.itemRenderer = factory;
				}
				
				if ((questionType == "1") || (questionType == "4")) {
					//factory = new ClassFactory(SurveyAnswersRenderer);
					factory = new ClassFactory(ValueRenderer);
					//factory2.properties = {labelField:"ANS_TEXT"};
					lstAnswers.itemRenderer = factory;
				}
				
				questionBreadcrumb.push(arrQuestions.getItemAt(0).SUD_QUE_CODE);
				questionCounter = questionBreadcrumb.length;
				
				checkBackVisibility();
				matchAnswersSelected();
				
				this.lstAnswers.selectedIndex = -1;
			}
			
			// HIGHLIGHT SELECTED ANSWERS
			private function matchAnswersSelected():void
			{
				for (var i:int=0; i<arrQuestions.length; i++)
				{
					var s:String = arrQuestions.getItemAt(i).SRS_ANS_VALUE;
					
					if ((s == "null") || (s == null)) { s = ""; }
					
					if (s != "") 
					{	
						if ((s == "0") && ((questionType == "2") || (questionType == "3")))
						{
							arrQuestions.getItemAt(i).SELECTED = "0";	
						}
						else
						{
							arrQuestions.getItemAt(i).SELECTED = "1";	
						}
					} 
					else 
					{	
						arrQuestions.getItemAt(i).SELECTED = "0";
					}
				}
				arrQuestions.refresh();
				this.lstAnswers.validateNow();
			}
			
			// NEXT QUESTION
			private function nextQuestion():void
			{
				this.lstAnswers.selectedIndex = -1;
				
				var goNext:Boolean = false;
				var msgText:String = "Необходимо ответить на вопрос";
				
				for (var i:int=0;i<arrQuestions.length;i++)
				{	
					if ((arrQuestions.getItemAt(i).SRS_ANS_VALUE != null) && (arrQuestions.getItemAt(i).SRS_ANS_VALUE != "null"))
					{
						goNext = true;
					}
				}
				
				for (var j:int=0;j<arrQuestions.length;j++)
				{	
					if ((arrQuestions.getItemAt(j).SRS_ANS_IS_MANDATORY == 1) && (arrQuestions.getItemAt(j).SRS_ANS_CHECKED != "1" ))
					{
						goNext = false;
						msgText = "Необходимо ответить на обязательные вопросы";
					}
				}
				
				
				if (goNext)
				{
					// Get next question
					var NEXT_SUD_QUE_CODE:String = findAnsweredQuestion();
					if (NEXT_SUD_QUE_CODE.length == 0)
					{
						try
						{
							NEXT_SUD_QUE_CODE = arrQuestions.getItemAt(0).SUD_ANS_NEXT_QUE_CODE;
						}
						catch (err:Error)
						{
							Globals.showOkDialog("Error",err.getStackTrace());
						}
					}				
					
					questionLoaded(NEXT_SUD_QUE_CODE);
				}
				else
				{
					Globals.showOkDialog(Globals.SUR_NAME,msgText);
				}
			}
			
			private function findAnsweredQuestion():String
			{
				var result:String = "";
				
				for (var i:int=0; i<arrQuestions.length; i++)
				{
					if (arrQuestions.getItemAt(i).SELECTED == "1")
					{
						result = arrQuestions.getItemAt(i).SUD_ANS_NEXT_QUE_CODE;
						break;
					}
				}				
				return result;
			}
			
			// BACK FUNCTION
			private function pushBack():void
			{
				this.lstAnswers.selectedIndex = -1;
				
				if (questionBreadcrumb.length > 1) 
				{	
					panSum.visible = false;
					panSum.includeInLayout = false;
					questionBreadcrumb.pop();	
					questionLoaded(questionBreadcrumb.pop());
				} 
				else 
				{
					var alert:DialogView = Dialog.service.create( 
						new AlertBuilder()
						.setTitle( "Выход из опроса" )
						.setMessage( "Вы хотите выйти из опроса? Данные не будут сохранены" )
						.addOption( "OK", DialogAction.STYLE_POSITIVE )
						.addOption( "Отмена", DialogAction.STYLE_CANCEL )
						.build()
					);
					alert.addEventListener( DialogViewEvent.CLOSED, exitSurveyAlert_closedHandler );
					alert.show();
				}				
			}
			private function exitSurveyAlert_closedHandler( event:DialogViewEvent ):void
			{
				if (event.index == 1) { 
					dispatchEvent(new MainNavEvent(MainNavEvent.BACK_EVENT,true,false,""));
				}
				var alert:DialogView = DialogView(event.currentTarget);
				alert.removeEventListener( DialogViewEvent.CLOSED, exitSurveyAlert_closedHandler );
				alert.dispose();
			}
			
			// CHECK BACK VISIBILITY
			private function checkBackVisibility():void
			{
				if (arrQuestions.getItemAt(0).SUD_ANS_NEXT_QUE_CODE == null)
				{
					lastQuestion = true;					
					this.hgNext.visible = false;
					this.lstAnswers.enabled = false;					
					countSumOfAnswers();
				}
				else
				{
					lastQuestion = false;					
					this.hgNext.visible = true;					
					this.lstAnswers.enabled = true;
				}
			}
			
			// Count sum of weights of answers
			private function countSumOfAnswers():void
			{
				lstAnswers.dataProvider = null;
				lstAnswers.validateNow();
				
				arrQuestions.filterFunction = null;
				arrQuestions.refresh();
				
				var sum:int = 0;
				
				for (var i:int=0; i<arrQuestions.length; i++)
				{
					if (arrQuestions.getItemAt(i).SELECTED == 1)
					{
						try
						{
							sum += Number(arrQuestions.getItemAt(i).ANS_WEIGHT);
						} catch (err:Error) {}
					}
				}
				
				arrQuestions.filterFunction = filterByQuestion;
				arrQuestions.refresh();
				
				function filterByQuestion(item:Object):Boolean
				{
					var result:Boolean = false;
					
					if (item.SUD_QUE_CODE == arrQuestions.getItemAt(arrQuestions.length - 1).QUE_CODE)
					{
						result = true;
					}	
					
					return result;
				}				
				
				lstAnswers.dataProvider = arrQuestions;
				lstAnswers.validateNow();
				
				questionType = arrQuestions.getItemAt(0).QUE_QUT_CODE;
				
				matchAnswersSelected();
				
				this.lstAnswers.selectedIndex = -1;
				
				arrQuestions.getItemAt(0).ANS_TEXT = "Сумма баллов: " + sum.toString();
				arrQuestions.getItemAt(0).SRS_ANS_VALUE = sum.toString();
				
				if (sum > 0) {
					panSum.visible = true;
					panSum.includeInLayout = true;
					lblSum.text = "Сумма баллов: " + sum.toString();
				} else {
					panSum.visible = false;
					panSum.includeInLayout = false;
				}
			}
			
			protected function hgNext_clickHandler(event:MouseEvent):void
			{
				nextQuestion();	
			}
			
			protected function hgBack_clickHandler(event:MouseEvent):void
			{
				pushBack();
			}
			
			protected function lstAnswers_clickHandler(event:MouseEvent):void
			{
				if (lstAnswers.selectedIndex > -1)
				{			
					counter = this.lstAnswers.selectedIndex;
					
					switch (questionType)
					{
						// Числовое значение (0..9)
						case "1" : 	
						case "4" : 	
							openCounter(this.lstAnswers.selectedItem.ANS_TEXT, this.lstAnswers.selectedItem.SRS_ANS_VALUE);
							break;
						// Выбор нескольких значений
						case "2" : 	doMultipleSelection();
							break;
						// Выбор одного значения
						case "3" : 	doSingleSelection();
							break;
						/*
						// Выбор даты
						case "5" : 	openDateInput(this.lstAnswers.selectedItem.ANS_TEXT, this.lstAnswers.selectedItem.SRS_ANS_VALUE);
							break;
						// Текстовое поле
						case "6" : 	openTextInput(this.lstAnswers.selectedItem.ANS_TEXT, this.lstAnswers.selectedItem.SRS_ANS_VALUE);
							break;
						*/
						default : Dialog.service.toast("No action assigned");
					}
				}
			}
			
			private function openCounter(ANS_TEXT:String, ANS_VALUE:String):void
			{
				ANS_VALUE = ANS_VALUE == "null" ? "" : ANS_VALUE;
				ANS_VALUE = ANS_VALUE == null ? "" : ANS_VALUE;
				
				var alert:DialogView = Dialog.service.create( 
					new AlertBuilder()
					.setTitle( arrQuestions.getItemAt(0).QUE_TEXT )
					.setMessage( ANS_TEXT )
					.addTextField("", "Введите значение...", true, com.distriqt.extension.dialog.KeyboardType.NUMBER_PAD, true)
					.addOption( "OK", DialogAction.STYLE_POSITIVE )
					.addOption( "Отмена", DialogAction.STYLE_CANCEL )
					.build()
				);
				
				alert.addEventListener( DialogViewEvent.CLOSED, textViewAlert_closedHandler );
				alert.show();
			}

			private function textViewAlert_closedHandler( event:DialogViewEvent ):void
			{
				var vpos:Number = this.lstAnswers.layout.verticalScrollPosition;
				var result:String = event.values.join(",");

				if (event.index == 1) 
				{
					if (result == "null" || result == "-1" || result == "")
					{
						this.arrQuestions.getItemAt(counter).SRS_ANS_VALUE = null;
						this.arrQuestions.getItemAt(counter).SELECTED = "0";
						this.arrQuestions.getItemAt(counter).SRS_ANS_CHECKED = "0";
					}
					else
					{	
						this.arrQuestions.getItemAt(counter).SRS_ANS_VALUE = result;
						this.arrQuestions.getItemAt(counter).SELECTED = "1";
						this.arrQuestions.getItemAt(counter).SRS_ANS_CHECKED = "1";
					}
					arrQuestions.refresh();
					this.lstAnswers.dataProvider = arrQuestions;
					this.lstAnswers.validateNow();
				}
				
				this.lstAnswers.layout.verticalScrollPosition = vpos;
				
				var alert:DialogView = DialogView(event.currentTarget);
				alert.removeEventListener( DialogViewEvent.CLOSED, textViewAlert_closedHandler );
				alert.dismiss();
				alert.dispose();
				trace("text view closed: " + event.index +"::"+ event.values.join(",") );

				this.panQuestion.setFocus();				
			}

			
			private function doSingleSelection():void
			{
				var vpos:Number = this.lstAnswers.layout.verticalScrollPosition;
				
				var selIdx:int = this.lstAnswers.selectedIndex;
				for (var i:int=0;i<arrQuestions.length;i++)
				{
					this.arrQuestions.getItemAt(i).SRS_ANS_VALUE = "0";
					this.arrQuestions.getItemAt(i).SELECTED = "0";
					this.arrQuestions.getItemAt(i).SRS_ANS_CHECKED = "1";
				}
				this.arrQuestions.getItemAt(selIdx).SRS_ANS_VALUE = "1";
				this.arrQuestions.getItemAt(selIdx).SELECTED = "1";
				this.arrQuestions.getItemAt(selIdx).SRS_ANS_CHECKED = "1";
				
				arrQuestions.refresh();
				this.lstAnswers.dataProvider = arrQuestions;
				this.lstAnswers.validateNow();
				
				this.lstAnswers.selectedIndex = -1;				
				this.lstAnswers.layout.verticalScrollPosition = vpos;
			}
			
			private function doMultipleSelection():void
			{
				var vpos:Number = this.lstAnswers.layout.verticalScrollPosition;
				var selIdx:int = this.lstAnswers.selectedIndex;
				
				arrQuestions.getItemAt(selIdx).SELECTED = arrQuestions.getItemAt(selIdx).SELECTED == "1" ? "0" : "1";
				arrQuestions.getItemAt(selIdx).SRS_ANS_VALUE = arrQuestions.getItemAt(selIdx).SRS_ANS_VALUE == "1" ? "0" : "1";
				arrQuestions.getItemAt(selIdx).SRS_ANS_CHECKED = arrQuestions.getItemAt(selIdx).SRS_ANS_CHECKED == "1" ? "0" : "1";
				
				arrQuestions.refresh();				
				this.lstAnswers.dataProvider = arrQuestions;
				this.lstAnswers.validateNow();				
				this.lstAnswers.layout.verticalScrollPosition = vpos;
			}
			
			protected function btnEndSurvey_clickHandler(event:MouseEvent):void
			{
				var alert:DialogView = Dialog.service.create( 
					new AlertBuilder()
					.setTitle( "Завершение опроса" )
					.setMessage( "Вы хотите завершить опрос [" + Globals.SUR_NAME + "]?" )
					.addOption( "OK", DialogAction.STYLE_POSITIVE )
					.addOption( "Отмена", DialogAction.STYLE_CANCEL )
					.build()
				);
				alert.addEventListener( DialogViewEvent.CLOSED, endSurveyAlert_closedHandler );
				alert.show();
			}
			private function endSurveyAlert_closedHandler( event:DialogViewEvent ):void
			{
				if (event.index == 1) { 
					writeAnswerToDB(true);
				}
				var alert:DialogView = DialogView(event.currentTarget);
				alert.removeEventListener( DialogViewEvent.CLOSED, endSurveyAlert_closedHandler );
				alert.dispose();
			}
			
			private function writeAnswerToDB(end:Boolean):void
			{
				Globals.loadingShow("","Сохранение опроса...");
				
				lstAnswers.dataProvider = null;
				lstAnswers.validateNow();
				
				arrQuestions.filterFunction = null;
				arrQuestions.refresh();
				
				this.btnEndSurvey.enabled = false;
				
				var adjArr:ArrayCollection = new ArrayCollection();
				
				if (end)
				{
					var bq0:BatchQuery = new BatchQuery();
					bq0.query = "UPDATE ST_SURVEY SET SUR_IS_OPEN = 0 WHERE SUR_CODE = " + Globals.SUR_CODE + ";";
					adjArr.addItem(bq0);
				}
				
				for (var i:int=0;i<arrQuestions.length;i++)
				{
					var bq:BatchQuery = new BatchQuery();
					bq.query = "UPDATE ST_SURVEY_RESULTS SET " +
						"SRS_ANS_VALUE = '" + arrQuestions.getItemAt(i).SRS_ANS_VALUE + "'," +
						"SRS_ANS_CHECKED = 1," +
						"SRS_VIS_NUMBER = '" + Globals.SUB_VIS_NUMBER + "'" +
						" WHERE" +
						"(SRS_SUR_CODE = " + Globals.SUR_CODE + ") AND" +
						"(SRS_QUE_CODE = " + arrQuestions.getItemAt(i).SRS_QUE_CODE + ") AND" +
						"(SRS_ANS_CODE = " + arrQuestions.getItemAt(i).ANS_CODE + ") AND" +
						"(SRS_SAL_CODE = " + Globals.SAL_CODE + ")" +
						";"
					adjArr.addItem(bq);
				}
				
				var bq1:BatchQuery = new BatchQuery();
				bq1.query = "UPDATE ST_VISIT SET " +
					"VIS_CANCELLED = 0," +					
					" VIS_FINISH_DATE = '" + 
					Globals.CurrentDateTimeWithMinutesSecondsString() + 
					"' WHERE VIS_NUMBER = " +
					"'" + Globals.SUB_VIS_NUMBER + "'" + ";";
				adjArr.addItem(bq1);
				
				Database.removeEventListener(CheckEvent.ADJUST_EVENT, SAVE_A_ST_SURVEY_DETAILS_RESULT);
				Database.addEventListener(CheckEvent.ADJUST_EVENT, SAVE_A_ST_SURVEY_DETAILS_RESULT, false, 0, true);
				Database.ADJUST(adjArr);
			}
			
			private function SAVE_A_ST_SURVEY_DETAILS_RESULT(e:CheckEvent):void
			{
				Database.removeEventListener(CheckEvent.ADJUST_EVENT, SAVE_A_ST_SURVEY_DETAILS_RESULT);
				Globals.loadingClose();
				
				if (e.data > 0) 
				{	
					Dialog.service.toast("Данные опроса сохранены");
					START_PART_SYNC();
				}	
				else	
				{
					Globals.showOkDialog("Ошибка","Ошибка вставки деталей опроса: "  + e.text + "\nОпрос не сохранен.\nПерезагрузите приложение");
				}
			}
			
			/* ===============================================			
			PART SYNC
			=================================================*/	
			private function START_PART_SYNC():void
			{
				PartSync.addEventListener(PartSyncEvent.SYNC_RESULT, partSyncHandler);
				PartSync.startPartSync();
			}			
			private function partSyncHandler(event:PartSyncEvent):void
			{
				trace("Part Sync Handler HAS ERROR: " + event.hasError + " | ERR_TEXT: " + event.errorText);
				Globals.loadingClose();
				PartSync.removeEventListener(PartSyncEvent.SYNC_RESULT, partSyncHandler);
				dispatchEvent(new MainNavEvent(MainNavEvent.BACK_EVENT,true,false,""));
			}
			
		]]>
	</fx:Script>
	
	<s:VGroup width="100%" height="10%" gap="0">
		<s:Group width="100%" height="100%">
			<s:Rect width="100%" height="100%">
				<s:fill>
					<s:SolidColor color="{Globals.MAIN_COLOR}"/>
				</s:fill>
			</s:Rect>
			<s:HGroup width="100%" height="100%">
				<s:HGroup id="hgBack"
						  width="20%" height="100%" 
						  verticalAlign="middle" horizontalAlign="left" 
						  click="hgBack_clickHandler(event)">
					<s:Label id="icon" 
							 text="&#xf053;" 
							 color="#FFFFFF" 
							 width="100%" height="100%"
							 fontFamily="FontAwesome"
							 verticalAlign="middle" textAlign="center" />
					<s:Line height="100%" alpha="0.5">
						<s:stroke>
							<s:SolidColorStroke color="#FFFFFF" weight="1" caps="square"/>
						</s:stroke>
					</s:Line>
				</s:HGroup>		
				<s:HGroup width="60%" height="100%" verticalAlign="middle" horizontalAlign="center" paddingLeft="10">
					<s:Label id="lblTitle" 
							 width="100%" height="100%" 
							 text="{Globals.SUR_NAME}" 
							 color="0xFFFFFF"
							 fontWeight="bold"
							 verticalAlign="middle" textAlign="center" />
				</s:HGroup>		
				<s:HGroup id="hgNext" 					  
						  width="20%" height="100%" 
						  verticalAlign="middle" horizontalAlign="right" 
						  click="hgNext_clickHandler(event)">
					<s:Line height="100%" alpha="0.5">
						<s:stroke>
							<s:SolidColorStroke color="#FFFFFF" weight="1" caps="square"/>
						</s:stroke>
					</s:Line>
					<s:Label id="lblMessages" 
							 text="&#xf054;"
							 width="100%" height="100%" 
							 color="0xFFFFFF"
							 fontFamily="FontAwesome"
							 verticalAlign="middle" textAlign="center" />
				</s:HGroup>			
			</s:HGroup>
		</s:Group>		
	</s:VGroup>
	
	<s:VGroup width="100%" height="100%" padding="5" visible="{!lastQuestion}" includeInLayout="{!lastQuestion}">
		<s:Panel id="panQuestion" title="Вопрос {questionCounter.toString()}" width="100%" maxHeight="150">
			<s:Scroller width="100%" height="100%" verticalScrollPolicy="on">
				<s:VGroup width="100%" padding="5">
					<s:Label id="lbQuestion" width="100%" fontWeight="bold" />	
				</s:VGroup>				
			</s:Scroller>
		</s:Panel>	
		<s:Panel title="Варианты ответов" width="100%" height="100%">
			<s:List id="lstAnswers" 
					width="100%" height="100%" 
					allowMultipleSelection="{multipleSelection}"
					click="lstAnswers_clickHandler(event)" 
					dataProvider="{arrQuestions}"/>
		</s:Panel>
	</s:VGroup>
	
	<s:VGroup width="100%" height="10%" padding="5" visible="{lastQuestion}" includeInLayout="{lastQuestion}">
		<components:ButtonIcon id="btnEndSurvey"
							   label="ЗАВЕРШИТЬ ОПРОС"
							   width="100%"
							   height="100%"
							   brand="{BrandColorEnum.Success}"
							   click="btnEndSurvey_clickHandler(event)" />		
	</s:VGroup>	
	<s:VGroup id="panSum" width="100%" padding="5">
		<s:Panel title="Сумма баллов" width="100%">
			<s:VGroup width="100%" padding="5">
				<s:Label id="lblSum" width="100%" fontWeight="bold" />
			</s:VGroup>
		</s:Panel>	
	</s:VGroup>
	
</s:VGroup>
