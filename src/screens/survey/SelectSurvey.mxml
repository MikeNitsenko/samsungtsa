<?xml version="1.0" encoding="utf-8"?>
<s:VGroup xmlns:fx="http://ns.adobe.com/mxml/2009" 
		  xmlns:s="library://ns.adobe.com/flex/spark" 
		  width="100%" 
		  height="100%"
		  gap="0"
		  preinitialize="vgroup1_preinitializeHandler(event)"
		  creationComplete="vgroup1_creationCompleteHandler(event)" 
		  xmlns:system="components.system.*">
	<fx:Script>
		<![CDATA[
			import com.distriqt.extension.dialog.Dialog;
			import com.distriqt.extension.dialog.DialogView;
			import com.distriqt.extension.dialog.ProgressDialogView;
			import com.distriqt.extension.dialog.builders.AlertBuilder;
			import com.distriqt.extension.dialog.events.DialogViewEvent;
			import com.distriqt.extension.dialog.objects.DialogAction;
			
			import mx.collections.ArrayCollection;
			import mx.events.FlexEvent;
			
			import classes.Globals;
			import classes.Model.BatchQuery;
			import classes.Model.Database;
			import classes.Utils.GPSUtil;
			import classes.Utils.QueryConstructor;
			import classes.Utils.TextFile;
			
			import events.MainNavEvent;
			import events.Model.QueryEvent;
			import events.custom.CheckEvent;
			
			private var progressDialog:ProgressDialogView;
			
			[Bindable] private var arrSurveys:ArrayCollection = new ArrayCollection();
			
			protected function vgroup1_preinitializeHandler(event:FlexEvent):void
			{
				stage.setAspectRatio(StageAspectRatio.PORTRAIT);
			}			
			
			protected function vgroup1_creationCompleteHandler(event:FlexEvent):void
			{
				loadMenu();
			}
			
			private function loadMenu():void
			{
				Database.addEventListener(QueryEvent.DATA_LOADED, baseDataLoaded, false, 0, true);
				Database.init("SELECT SUR_CODE, SUR_NAME, SUR_DESC, 0 AS VISITED, SUR_IS_OPEN, SUR_IS_PROMO FROM ST_SURVEY ORDER BY SUR_IS_PROMO, SUR_NAME");
			}
			private function baseDataLoaded(e:QueryEvent):void
			{
				Database.removeEventListener(QueryEvent.DATA_LOADED, baseDataLoaded );				
				arrSurveys = e.data;
			}
			
			protected function lstSurveys_clickHandler(event:MouseEvent):void
			{
				if (lstSurveys.selectedIndex > -1) {
					Globals.SUR_CODE = this.lstSurveys.selectedItem.SUR_CODE;
					Globals.SUR_NAME = this.lstSurveys.selectedItem.SUR_NAME;					
					Globals.SUR_IS_PROMO = this.lstSurveys.selectedItem.SUR_IS_PROMO == "1" ? true : false;
					
					var alertMessage:String = "Начать опрос [" + Globals.SUR_NAME + "]?";
					alertMessage += Globals.SUR_IS_PROMO ? "\n\n*Примечание:\nДля проведения 1-2-1 коммуникаций экран будет повернут" : "";
					
					var alert:DialogView = Dialog.service.create( 
						new AlertBuilder()
						.setTitle( "Начало опроса" )
						.setMessage( alertMessage )
						.addOption( "OK", DialogAction.STYLE_POSITIVE )
						.addOption( "Отмена", DialogAction.STYLE_CANCEL )
						.build()
					);
					alert.addEventListener( DialogViewEvent.CLOSED, startSurveyAlert_closedHandler );
					alert.show();
				}
			}
			
			private function startSurveyAlert_closedHandler( event:DialogViewEvent ):void
			{
				if (event.index == 1) { 
					//dispatchEvent(new MainNavEvent(MainNavEvent.NEXT_EVENT,true,false,"902"));
					if (!Globals.SUR_IS_PROMO) {
						Globals.loadingShow(Globals.SUR_NAME,"Подготовка данных...");
						prepareSurveyData();
					} else {
						createSubVisit();
					}
				}
				var alert:DialogView = DialogView(event.currentTarget);
				alert.removeEventListener( DialogViewEvent.CLOSED, startSurveyAlert_closedHandler );
				alert.dispose();
			}
			
			/* ===============================================
			*************    FLAT SURVEY PREPARATION     ******
		    =================================================*/	
			
			private function prepareSurveyData():void
			{
				Database.addEventListener(QueryEvent.DATA_LOADED, surveyDataLoaded, false, 0, true);
				Database.init( "SELECT " +
					" SUD_SUR_CODE, SUD_QUE_CODE, SUD_ANS_CODE, SUD_ANS_NEXT_QUE_CODE, SUD_SHOW_ORDER, '" + Globals.VIS_NUMBER + "', " + Globals.SAL_CODE + ", SUD_ANS_IS_MANDATORY, SRS_ANS_VALUE, 0" +
					" FROM VIEW_SURVEY_RESULTS WHERE SUD_SUR_CODE = " + Globals.SUR_CODE + " AND SAL_CODE = " + Globals.SAL_CODE + " ");
			}
			private function surveyDataLoaded(e:QueryEvent):void
			{
				Database.removeEventListener(QueryEvent.DATA_LOADED, surveyDataLoaded );
				
				var adjArr:ArrayCollection = new ArrayCollection();
				
				Globals.SUB_VIS_NUMBER = Globals.getUniqueCode();
				
				var bq0:BatchQuery = new BatchQuery();
				bq0.query = QueryConstructor.buildSubVisitInsert("VIT04")[0] as String;
				adjArr.addItem(bq0);
				
				for (var i:int=0;i<e.data.length;i++)
				{
					var bq:BatchQuery = new BatchQuery();
					bq.query = "INSERT INTO ST_SURVEY_RESULTS (SRS_SUR_CODE, SRS_QUE_CODE, SRS_ANS_CODE, " +
						"SRS_ANS_NEXT_QUE_CODE, SRS_SHOW_ORDER, SRS_VIS_NUMBER, SRS_SAL_CODE, SRS_ANS_IS_MANDATORY, SRS_ANS_VALUE, SRS_IS_SYNCED) " +
						" " +
						"VALUES (" +
						e.data.getItemAt(i).SUD_SUR_CODE + ", " +
						e.data.getItemAt(i).SUD_QUE_CODE + ", " +
						e.data.getItemAt(i).SUD_ANS_CODE + ", " + 
						e.data.getItemAt(i).SUD_ANS_NEXT_QUE_CODE + ", " +
						e.data.getItemAt(i).SUD_SHOW_ORDER + ", " +
						"'" + Globals.SUB_VIS_NUMBER + "', " + 
						Globals.SAL_CODE + ", " +
						e.data.getItemAt(i).SUD_ANS_IS_MANDATORY + ", " + 
						"'" + e.data.getItemAt(i).SRS_ANS_VALUE + "'" + ", 0)"; 
					adjArr.addItem(bq);
				}
				
				var bq2:BatchQuery = new BatchQuery();
				bq2.query = "DELETE FROM ST_SURVEY_RESULTS WHERE SRS_SUR_CODE = " + Globals.SUR_CODE + " AND SRS_SAL_CODE = " + Globals.SAL_CODE + " AND " +
					"SRS_IS_OLD = 1";
				
				var bq3:BatchQuery = new BatchQuery();
				bq3.query = "UPDATE ST_SURVEY_RESULTS SET SRS_IS_OLD = 1, SRS_ANS_CHECKED = 0 WHERE SRS_SUR_CODE = " + Globals.SUR_CODE + " AND SRS_SAL_CODE = " + Globals.SAL_CODE + ";";
				
				var bq4:BatchQuery = new BatchQuery();
				bq4.query = "UPDATE ST_SURVEY SET SUR_IS_OPEN = 1 WHERE SUR_CODE = " + Globals.SUR_CODE;
				
				adjArr.addItem(bq2);
				adjArr.addItem(bq3);
				adjArr.addItem(bq4);
				
				Database.removeEventListener(CheckEvent.ADJUST_EVENT, SAVE_A_ST_SURVEY_DETAILS_RESULT );
				Database.addEventListener(CheckEvent.ADJUST_EVENT, SAVE_A_ST_SURVEY_DETAILS_RESULT, false, 0, true);
				Database.ADJUST(adjArr);
			}
			private function SAVE_A_ST_SURVEY_DETAILS_RESULT(e:CheckEvent):void
			{
				Globals.loadingClose();
				Database.removeEventListener(CheckEvent.ADJUST_EVENT, SAVE_A_ST_SURVEY_DETAILS_RESULT );
				
				if (e.data > 0) 
				{		
					// Write log
					//TextFile.append("SURVEY_START;" + Globals.USE_CODE + ";" + Globals.PER_CODE + ";" + 
					//	Globals.SUR_NAME + ";" + "SAL_ID: " + Globals.SAL_ID + ";" + Globals.CurrentDateTimeWithMinutesSecondsString() + ";" + Globals.VERSION_NUMBER + ";" + File.lineEnding);
					
					//navigator.pushView(views.i_survey.bSurveyProcessing);
					//navigator.pushView(views.i_survey.cSurveyProcessingFlat);
					dispatchEvent(new MainNavEvent(MainNavEvent.NEXT_EVENT,true,false,"904"));
				}	
				else	
				{
					//Globals.showToast("Ошибка подготовки опроса: " + e.text);
					Dialog.service.toast("Ошибка подготовки опроса: " + e.text);
				}
			}
			
			/* =================================================
			*************    1-2-1 SURVEY PREPARATION     ******
			==================================================*/	
			private function createSubVisit():void
			{
				Globals.loadingClose();
				Globals.loadingShow(Globals.SUR_NAME,"Подготовка опросника");
				
				var adjArr:ArrayCollection = new ArrayCollection();	
				Globals.SUB_VIS_NUMBER = Globals.getUniqueCode();
				
				var bq:BatchQuery = new BatchQuery();
				bq.query = QueryConstructor.buildSubVisitInsert("VIT04")[0] as String;
				
				var bqRespondent:BatchQuery = new BatchQuery();
				bqRespondent.query = "INSERT INTO ST_RESPONDENTS (RES_ID, RES_VIS_NUMBER, RES_CREATED, RES_SURVEY_SUM, RES_SUR_CODE) VALUES (" +
					"'" + Globals.getUniqueCode()  + "'," +
					"'" + Globals.SUB_VIS_NUMBER  + "'," +
					"'" + Globals.CurrentDateTimeString()  + "'," +
					"'0'," +
					Globals.SUR_CODE +
					")";
				
				adjArr.addItem(bq);
				adjArr.addItem(bqRespondent);
				
				Database.removeEventListener(CheckEvent.ADJUST_EVENT, SAVE_VISIT_RESULT_START );
				Database.addEventListener(CheckEvent.ADJUST_EVENT, SAVE_VISIT_RESULT_START, false, 0, true);
				Database.ADJUST(adjArr);
			}
			private function SAVE_VISIT_RESULT_START(e:CheckEvent):void
			{				
				Globals.loadingClose();
				if (e.data > 0) 
				{
					prepareOneToOneSurveyData();
				}	
				else	
				{
					Globals.showOkDialog("ERROR PREPARING SUBVISIT", e.text);
				}
			}
			private function prepareOneToOneSurveyData():void
			{
				Database.addEventListener(QueryEvent.DATA_LOADED, oneToOneSurveyDataLoaded, false, 0, true);
				Database.init( "SELECT " +
					" SUD_SUR_CODE, SUD_QUE_CODE, SUD_ANS_CODE, SUD_ANS_NEXT_QUE_CODE, SUD_SHOW_ORDER, '" + 
					Globals.SUB_VIS_NUMBER + "', " + Globals.SAL_CODE + ", SUD_ANS_IS_MANDATORY" +
					" FROM ST_SURVEY_DETAILS WHERE SUD_SUR_CODE = " + Globals.SUR_CODE);
			}
			private function oneToOneSurveyDataLoaded(e:QueryEvent):void
			{
				Database.removeEventListener(QueryEvent.DATA_LOADED, surveyDataLoaded );
				
				var adjArr:ArrayCollection = new ArrayCollection();
				
				if (e.data.length > 0)
				{
					for (var i:int=0;i<e.data.length;i++)
					{
						var bq:BatchQuery = new BatchQuery();
						bq.query = "INSERT INTO ST_SURVEY_RESULTS (SRS_SUR_CODE, SRS_QUE_CODE, SRS_ANS_CODE, " +
							"SRS_ANS_NEXT_QUE_CODE, SRS_SHOW_ORDER, SRS_VIS_NUMBER, SRS_SAL_CODE, SRS_ANS_IS_MANDATORY) " +
							" " +
							"VALUES (" +
							e.data.getItemAt(i).SUD_SUR_CODE + ", " +
							e.data.getItemAt(i).SUD_QUE_CODE + ", " +
							e.data.getItemAt(i).SUD_ANS_CODE + ", " + 
							e.data.getItemAt(i).SUD_ANS_NEXT_QUE_CODE + ", " +
							e.data.getItemAt(i).SUD_SHOW_ORDER + ", " +
							"'" + Globals.SUB_VIS_NUMBER + "', " + 
							Globals.SAL_CODE + ", " +
							e.data.getItemAt(i).SUD_ANS_IS_MANDATORY + ")"; 
						adjArr.addItem(bq);
					}
					
					Database.removeEventListener(CheckEvent.ADJUST_EVENT, saveOneToOneSurveyDataResult );
					Database.addEventListener(CheckEvent.ADJUST_EVENT, saveOneToOneSurveyDataResult, false, 0, true);
					Database.ADJUST(adjArr);
				}
				else
				{
					Globals.showOkDialog("Ошибка формирования","При формировании опроса произошла ошибка.\n" +
																"Нет деталей опроса.\n" +
																"Обратитесь к администратору системы");
				}
			}
			private function saveOneToOneSurveyDataResult(e:CheckEvent):void
			{
				Globals.loadingClose();
				Database.removeEventListener(CheckEvent.ADJUST_EVENT, saveOneToOneSurveyDataResult );
				
				if (e.data > 0) 
				{		
					// Write log
					TextFile.append("SURVEY_START;" + Globals.USE_CODE + ";" + Globals.PER_CODE + ";" + 
						Globals.SUR_NAME + ";" + "SAL_ID: " + Globals.SAL_ID + ";" + Globals.CurrentDateTimeWithMinutesSecondsString() + ";" + Globals.VERSION_NUMBER + ";" + File.lineEnding);
					
					Globals.SMS_CODE_SENT = false;
					
					dispatchEvent(new MainNavEvent(MainNavEvent.NEXT_EVENT,true,false,"905"));
					//navigator.pushView(views.i_survey.cPromoSurveysProcessing,o);
				}	
				else	
				{
					Globals.showOkDialog("Ошибка подготовки опроса", e.text);
				}
			}
			
			/* ===============================================			
			INDETERMINATE PROGRESS CALLOUT			
			=================================================*/	
			/*
			private function createProgressDialog(message:String):void
			{
				if (Dialog.isSupported)
				{
					progressDialog = Dialog.service.create( 
						new ProgressDialogBuilder()
						.setMessage( message )
						.setStyle( DialogType.STYLE_SPINNER )
						.setCancelable( false )
						.build()
					);
					progressDialog.show();
				}
			}
			
			private function disposeProgressDialog():void
			{	
				progressDialog.dismiss();
				progressDialog.dispose();
			}
			*/
			
		]]>
	</fx:Script>
	
	<system:TsaActionBar id="tsaActionBar" titleText="Опросы" backVisible="true" />
	
	<s:VGroup width="100%" height="100%" padding="5">
		<s:Panel title="Список опросов" width="100%" height="100%">
			<s:List id="lstSurveys" 
					width="100%" height="100%" 
					click="lstSurveys_clickHandler(event)"
					dataProvider="{arrSurveys}" 
					itemRenderer="renderers.SurveyRenderer"
					labelField="SUR_NAME">		
			</s:List>
		</s:Panel>	
	</s:VGroup>
</s:VGroup>
